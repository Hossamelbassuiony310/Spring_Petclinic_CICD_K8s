apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic-deployment
  labels:
    app: petclinic
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic
  template:
    metadata:
      labels:
        app: petclinic
    spec:
      containers:
      - name: petclinic
        image: hossam136/spring-petclinic-image:v1
        # command: ["tail"]
        # args: ["-f", "/dev/null"]
        ports:
        - containerPort: 8080
          # hostPort: 8080 # Consider omitting this
        env:
        - name: MYSQL_URL 
          value: jdbc:mysql://mysql-service.default.svc.cluster.local:3306/petclinic
        - name: MYSQL_USER
          valueFrom: 
            secretKeyRef:
              name: secret-petclinic
              key: mysql_user
        - name: MYSQL_PASS
          valueFrom: 
            secretKeyRef:
              name: secret-petclinic
              key: mysql_password
        resources:
          requests:
            memory: "2Gi"  # Updated to 2Gi
            cpu: "500m"    # Updated to 500m
          limits:
            memory: "4Gi"  # Updated to 4Gi
            cpu: "2000m"   # Updated to 2000m
---

apiVersion: v1
kind: Service
metadata:
  name: petclinic-service
spec:
  selector:
    app: petclinic
  type: LoadBalancer # or NodePort if running locally
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
      # nodePort: 30000 # Optional if using NodePort
